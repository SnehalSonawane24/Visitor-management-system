"""
Django settings for vms project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    "DJANGO_SECRET_KEY",
    "django-insecure-w6wty$3vw^n&5@yh$y*64pn60(4zc9t53hbonl7gusu=9or@3_",
)

LOCAL = os.environ.get(
    "ENV",
    "PROD",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False


# ALLOWED_HOSTS = ['*']

ALLOWED_HOSTS = [
    '.vercel.app',
    '.now.sh',
    '127.0.0.1',
    'localhost',
    "0.0.0.0"
]

# Add or modify the AUTH_USER_MODEL setting
AUTH_USER_MODEL = 'accounts.UserAccount'

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
]

THIRD_PARTY_APPS = [
    'django_extensions',
    'rest_framework',
    'graphene_django',
    'rest_framework_swagger', 
    'drf_yasg',
    'import_export',
]

PROJECT_APPS = [
    'accounts',
    'organisation',
    'visitor',
    'config',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vms.urls'

templates= os.path.join(BASE_DIR,'templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [templates],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
}

WSGI_APPLICATION = 'vms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


if LOCAL not in[ "PROD"]:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
# local postgres database
    DATABASES = {
        "default": {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'HOST': os.environ.get('POSTGRES_HOST', '127.0.0.1'),
            'PORT': os.environ.get('POSTGRES_PORT', 5432),
            'NAME': os.environ.get('POSTGRES_DB', 'visitor_db'),
            'USER': os.environ.get('POSTGRES_USER', 'visitor_admin'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'admin123'),
        }
    }


# PG Edge Cloud postgres database

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": "vms",
#         "USER": "admin",
#         "PASSWORD": "sVMg7jMs8wzho69g56337J8a",
#         "HOST": "virtually-neutral-aardvark-iad.a1.pgedge.io",
#         "PORT": "5432",
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Define the directory where static files will be collected


STATIC_URL = 'static/'
STATICFILES_DIRS = os.path.join(BASE_DIR, 'static'),
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Mailgun configuration
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.mailgun.org'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'postmaster@sandbox1c5e9df2fe3b4074b657f7d9b7a4ea6e.mailgun.org'
# EMAIL_HOST_PASSWORD = '9cc6170c0282979b26bf244129a6e2f1-2175ccc2-321b8f19'
# DEFAULT_FROM_EMAIL = 'postmaster@sandbox1c5e9df2fe3b4074b657f7d9b7a4ea6e.mailgun.org'
# MAILGUN_API_KEY = '51f5176bd88531665cecf27cc0c758e8-2175ccc2-89a88cb0'
# MAILGUN_DOMAIN = 'sandbox1c5e9df2fe3b4074b657f7d9b7a4ea6e.mailgun.org'


# Django mail configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "jadenik13@gmail.com"
EMAIL_HOST_PASSWORD ="owuy nfep pste yqri"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# GDAL_LIBRARY_PATH = '/opt/homebrew/opt/gdal/lib/libgdal.dylib'
# GEOS_LIBRARY_PATH = '/opt/homebrew/opt/geos/lib/libgeos_c.dylib'
